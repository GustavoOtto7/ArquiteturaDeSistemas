events {
    worker_connections 1024;
}

http {
    upstream products_service {
        server products-service:3001;
    }
    
    upstream clients_service {
        server clients-service:3002;
    }
    
    upstream orders_service {
        server orders-service:3003;
    }
    
    upstream payments_service {
        server payments-service:3004;
    }

    server {
        listen 80;
        
        # Products Service - API routes
        location /v1/products {
            proxy_pass http://products_service/v1/products;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Products Service - Health check
        location /products-service/health {
            proxy_pass http://products_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Clients Service - API routes
        location /v1/clients {
            proxy_pass http://clients_service/v1/clients;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Clients Service - Health check
        location /clients-service/health {
            proxy_pass http://clients_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Orders Service - API routes
        location /v1/orders {
            proxy_pass http://orders_service/v1/orders;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Orders Service - Health check
        location /orders-service/health {
            proxy_pass http://orders_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Payments Service - API routes
        location /v1/payments {
            proxy_pass http://payments_service/v1/payments;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Payments Service - Health check
        location /payments-service/health {
            proxy_pass http://payments_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ========================================
        # ENDPOINTS COM PREFIXO DE SERVIÃ‡O (Para compatibilidade com testes)
        # ========================================
        
        # Products Service - Com prefixo
        location /products-service/ {
            proxy_pass http://products_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Clients Service - Com prefixo
        location /clients-service/ {
            proxy_pass http://clients_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Orders Service - Com prefixo (conforme testes usa "order-service")
        location /order-service/ {
            proxy_pass http://orders_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Payments Service - Com prefixo
        location /payments-service/ {
            proxy_pass http://payments_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location /health {
            return 200 '{"status":"ok","message":"API Gateway is running"}';
            add_header Content-Type application/json;
        }
        
        # Root endpoint with service information
        location / {
            return 200 '{"message":"E-commerce Microservices API Gateway","services":["products-service","clients-service","orders-service","payments-service"],"endpoints":{"/v1/products":"Products management","/v1/clients":"Clients management","/v1/orders":"Orders management","/v1/payments":"Payments processing"},"health_checks":{"/products-service/health":"Products health","/clients-service/health":"Clients health","/orders-service/health":"Orders health","/payments-service/health":"Payments health"}}';
            add_header Content-Type application/json;
        }
    }
}